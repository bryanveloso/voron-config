[homing_override]
axes: xyz
gcode:
  {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
  {% set probe_type_enabled = printer["gcode_macro _USER_VARIABLES"].probe_type_enabled %}
  {% set homing_zhop = printer["gcode_macro _USER_VARIABLES"].homing_zhop|float %}
  {% set homing_travel_speed = printer["gcode_macro _USER_VARIABLES"].homing_travel_speed * 60 %}
  {% set homing_travel_accel = printer["gcode_macro _USER_VARIABLES"].homing_travel_accel %}
  {% set sensorless_homing_enabled = printer["gcode_macro _USER_VARIABLES"].sensorless_homing_enabled %}
  {% set sensorless_current_factor = printer["gcode_macro _USER_VARIABLES"].sensorless_current_factor / 100 %}
  {% set z_drop_speed = printer["gcode_macro _USER_VARIABLES"].z_drop_speed * 60 %}
  {% set status_leds_enabled = printer["gcode_macro _USER_VARIABLES"].status_leds_enabled %}
  {% set bed_mesh_enabled = printer["gcode_macro _USER_VARIABLES"].bed_mesh_enabled %}

  {% set homing_first = printer["gcode_macro _USER_VARIABLES"].homing_first|string|upper %}
  {% set x_homing_backoff, y_homing_backoff = printer["gcode_macro _USER_VARIABLES"].homing_backoff_distance_xy|map('float') %}

  {% set x_position_endstop = printer["configfile"].config["stepper_x"]["position_endstop"]|float %}
  {% set y_position_endstop = printer["configfile"].config["stepper_y"]["position_endstop"]|float %}
  {% set x_position_center = printer.toolhead.axis_maximum.x|int/2 - printer.toolhead.axis_minimum.x|int/2 %}
  {% set y_position_center = printer.toolhead.axis_maximum.y|int/2 - printer.toolhead.axis_minimum.y|int/2 %}

  # reset parameters
  {% set X, Y, Z = False, False, False %}

  {% if status_leds_enabled %}
    STATUS_LEDS COLOR="HOMING"
  {% endif %}

  {% if not 'X' in params
    and not 'Y' in params
    and not 'Z' in params %}
    {% set X, Y, Z = True, True, True %}
  {% else %}
    {% if 'X' in params %}
      {% set X = True %}
    {% endif %}

    {% if 'Y' in params %}
      {% set Y = True %}
    {% endif %}

    {% if 'Z' in params %}
      {% set Z = True %}
    {% endif %}

    {% if 'X' in params
      and 'Y' in params
      and 'Z' in params %}
      _HOMING_VARIABLES reset=1
     {% endif %}
  {% endif %}

  {% set saved_accel = printer.toolhead.max_accel %}
  {% set saved_decel = printer.toolhead.max_accel_to_decel %}
  M204 S{homing_travel_accel}

  {% if bed_mesh_enabled %}
    BED_MESH_CLEAR
  {% endif %}

  G90

  {% if Z %}
    {% if ('z' in printer.toolhead.homed_axes) %}
      {% if (printer.toolhead.position.z < homing_zhop) %}
        {% if verbose %}
          { action_respond_info("Z too low, performing ZHOP") }
        {% endif %}
        G0 Z{homing_zhop} F{z_drop_speed}
      {% endif %}
    {% elif ('xy' in printer.toolhead.homed_axes) %}
      {% if verbose %}
        { action_respond_info("X and Y already homed, no ZHOP needed to home Z") }
      {% endif %}
    {% else %}
      {% if verbose %}
        { action_respond_info("X and Y not homed, forcing full G28 to home Z properly") }
      {% endif %}
      SET_KINEMATIC_POSITION X=0 Y=0 Z=0
      G0 Z{homing_zhop} F{z_drop_speed}
      {% set X, Y, Z = True, True, True %}
    {% endif %}
  {% endif %}

  {% if homing_first == "X" %}
    {% if X %} # Home x
      {% if verbose %}
        { action_respond_info("Homing X") }
      {% endif %}
      G28 X0
      G1 X{x_position_endstop + x_homing_backoff} F{homing_travel_speed}
    {% endif %}
    {% if Y %} # Home y
      {% if verbose %}
        { action_respond_info("Homing Y") }
      {% endif %}
      G28 Y0
      G1 Y{y_position_endstop + y_homing_backoff} F{homing_travel_speed}
    {% endif %}

  {% elif homing_first == "Y" %}
    {% if Y %} # Home y
      {% if verbose %}
        { action_respond_info("Homing Y") }
      {% endif %}
      G28 Y0
      G1 Y{y_position_endstop + y_homing_backoff} F{homing_travel_speed}
    {% endif %}
    {% if X %} # Home x
      {% if verbose %}
        { action_respond_info("Homing X") }
      {% endif %}
      G28 X0
      G1 X{x_position_endstop + x_homing_backoff} F{homing_travel_speed}
    {% endif %}

  {% else %}
    { action_respond_error("Axis homing order not valid. Choose either X or Y first in the variables.cfg file!") }
  {% endif %}


  # Home z
  {% if Z %}
    {% if verbose %}
      { action_respond_info("Homing Z") }
    {% endif %}

    # If there is a virtual probe endstop (ie. TAP or inductive as virtual), there are two cases:
    #   1. If it's a standard and usual homing, we go to the bed center point
    #   2. If it's a homing called during the print start for final Z offset adjustement, we check if there is
    #      an adaptive mesh computed. If possible we home directly on the RRI point (fallback to the bed center)
    # If the Z endstop is not virtual, then we just move to it
    {% if printer["configfile"].config["stepper_z"]["endstop_pin"]|lower == "probe:z_virtual_endstop" %}
      # In both cases, if our virtual endstop is a dockable probe, we need to activate it first
      {% if bed_mesh_enabled %}
        {% set mesh_ready = printer["gcode_macro _ADAPTIVE_MESH_VARIABLES"].ready %}
        {% if mesh_ready %}
          {% set mesh_center = printer["gcode_macro _ADAPTIVE_MESH_VARIABLES"].mesh_center %}
          {% set x_mesh_center, y_mesh_center = mesh_center.split(',')|map('trim')|map('float') %}
          RESPOND MSG="Z homing: a mesh is computed and ready, probing mesh center: {mesh_center}"
          G0 X{x_mesh_center} Y{y_mesh_center} F{homing_travel_speed}
        {% else %}
          G0 X{x_position_center} Y{y_position_center} F{homing_travel_speed}
        {% endif %}
      {% else %}
        G0 X{x_position_center} Y{y_position_center} F{homing_travel_speed}
      {% endif %}

    # Else, go to the Z endstop physical pin
    {% else %}
      _GOTO_Z_PROBE
    {% endif %}

    # Check in case of a Voron TAP probe to avoid probing the bed at high temperature
    {% if probe_type_enabled == "vorontap" %}
      ACTIVATE_PROBE
    {% endif %}

    G28 Z0

    G91
    G0 Z{homing_zhop} F{z_drop_speed} # small Z hop to avoid grinding the bed
    G90

    {% if probe_type_enabled == "vorontap" %}
      DEACTIVATE_PROBE
    {% endif %}
  {% endif %}

  SET_VELOCITY_LIMIT ACCEL={saved_accel} ACCEL_TO_DECEL={saved_decel}

  {% if status_leds_enabled %}
    STATUS_LEDS COLOR="READY"
  {% endif %}


[gcode_macro _GOTO_Z_PROBE]
description: Move to z probe avoiding the probe dock
gcode:
  {% set z_endstop_x, z_endstop_y = printer["gcode_macro _USER_VARIABLES"].zendstop_position|map('float') %}

  {% set homing_travel_speed = printer["gcode_macro _USER_VARIABLES"].homing_travel_speed|float * 60 %}

  {% set probe_dock_location_x, probe_dock_location_y = printer["gcode_macro _USER_VARIABLES"].probe_dock_location_xy|map('float') %}
  {% set probe_dock_margin_x, probe_dock_margin_y = printer["gcode_macro _USER_VARIABLES"].probe_dock_margin_xy|map('float') %}

  {% set current_x = printer.toolhead.position.x|float %}
  {% set current_y = printer.toolhead.position.y|float %}

  SAVE_GCODE_STATE NAME=goto_ZProbe
  G90

  G0 X{z_endstop_x} Y{z_endstop_y} F{homing_travel_speed}

  RESTORE_GCODE_STATE NAME=goto_ZProbe
